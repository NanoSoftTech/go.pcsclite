// +build ignore 

package scard

/*
#include <PCSC/winscard.h>
#include <PCSC/reader.h>
*/
import "C"

type Attrib uint32

const (
	ATTR_VENDOR_NAME              Attrib = C.SCARD_ATTR_VENDOR_NAME
	ATTR_VENDOR_IFD_TYPE          Attrib = C.SCARD_ATTR_VENDOR_IFD_TYPE
	ATTR_VENDOR_IFD_VERSION       Attrib = C.SCARD_ATTR_VENDOR_IFD_VERSION
	ATTR_VENDOR_IFD_SERIAL_NO     Attrib = C.SCARD_ATTR_VENDOR_IFD_SERIAL_NO
	ATTR_CHANNEL_ID               Attrib = C.SCARD_ATTR_CHANNEL_ID
	ATTR_ASYNC_PROTOCOL_TYPES     Attrib = C.SCARD_ATTR_ASYNC_PROTOCOL_TYPES
	ATTR_DEFAULT_CLK              Attrib = C.SCARD_ATTR_DEFAULT_CLK
	ATTR_MAX_CLK                  Attrib = C.SCARD_ATTR_MAX_CLK
	ATTR_DEFAULT_DATA_RATE        Attrib = C.SCARD_ATTR_DEFAULT_DATA_RATE
	ATTR_MAX_DATA_RATE            Attrib = C.SCARD_ATTR_MAX_DATA_RATE
	ATTR_MAX_IFSD                 Attrib = C.SCARD_ATTR_MAX_IFSD
	ATTR_SYNC_PROTOCOL_TYPES      Attrib = C.SCARD_ATTR_SYNC_PROTOCOL_TYPES
	ATTR_POWER_MGMT_SUPPORT       Attrib = C.SCARD_ATTR_POWER_MGMT_SUPPORT
	ATTR_USER_TO_CARD_AUTH_DEVICE Attrib = C.SCARD_ATTR_USER_TO_CARD_AUTH_DEVICE
	ATTR_USER_AUTH_INPUT_DEVICE   Attrib = C.SCARD_ATTR_USER_AUTH_INPUT_DEVICE
	ATTR_CHARACTERISTICS          Attrib = C.SCARD_ATTR_CHARACTERISTICS
	ATTR_CURRENT_PROTOCOL_TYPE    Attrib = C.SCARD_ATTR_CURRENT_PROTOCOL_TYPE
	ATTR_CURRENT_CLK              Attrib = C.SCARD_ATTR_CURRENT_CLK
	ATTR_CURRENT_F                Attrib = C.SCARD_ATTR_CURRENT_F
	ATTR_CURRENT_D                Attrib = C.SCARD_ATTR_CURRENT_D
	ATTR_CURRENT_N                Attrib = C.SCARD_ATTR_CURRENT_N
	ATTR_CURRENT_W                Attrib = C.SCARD_ATTR_CURRENT_W
	ATTR_CURRENT_IFSC             Attrib = C.SCARD_ATTR_CURRENT_IFSC
	ATTR_CURRENT_IFSD             Attrib = C.SCARD_ATTR_CURRENT_IFSD
	ATTR_CURRENT_BWT              Attrib = C.SCARD_ATTR_CURRENT_BWT
	ATTR_CURRENT_CWT              Attrib = C.SCARD_ATTR_CURRENT_CWT
	ATTR_CURRENT_EBC_ENCODING     Attrib = C.SCARD_ATTR_CURRENT_EBC_ENCODING
	ATTR_EXTENDED_BWT             Attrib = C.SCARD_ATTR_EXTENDED_BWT
	ATTR_ICC_PRESENCE             Attrib = C.SCARD_ATTR_ICC_PRESENCE
	ATTR_ICC_INTERFACE_STATUS     Attrib = C.SCARD_ATTR_ICC_INTERFACE_STATUS
	ATTR_CURRENT_IO_STATE         Attrib = C.SCARD_ATTR_CURRENT_IO_STATE
	ATTR_ATR_STRING               Attrib = C.SCARD_ATTR_ATR_STRING
	ATTR_ICC_TYPE_PER_ATR         Attrib = C.SCARD_ATTR_ICC_TYPE_PER_ATR
	ATTR_ESC_RESET                Attrib = C.SCARD_ATTR_ESC_RESET
	ATTR_ESC_CANCEL               Attrib = C.SCARD_ATTR_ESC_CANCEL
	ATTR_ESC_AUTHREQUEST          Attrib = C.SCARD_ATTR_ESC_AUTHREQUEST
	ATTR_MAXINPUT                 Attrib = C.SCARD_ATTR_MAXINPUT
	ATTR_DEVICE_UNIT              Attrib = C.SCARD_ATTR_DEVICE_UNIT
	ATTR_DEVICE_IN_USE            Attrib = C.SCARD_ATTR_DEVICE_IN_USE
	ATTR_DEVICE_FRIENDLY_NAME     Attrib = C.SCARD_ATTR_DEVICE_FRIENDLY_NAME
	ATTR_DEVICE_SYSTEM_NAME       Attrib = C.SCARD_ATTR_DEVICE_SYSTEM_NAME
	ATTR_SUPRESS_T1_IFS_REQUEST   Attrib = C.SCARD_ATTR_SUPRESS_T1_IFS_REQUEST
)

const (
	S_SUCCESS                 = scardError(C.SCARD_S_SUCCESS)
	F_INTERNAL_ERROR          = scardError(C.SCARD_F_INTERNAL_ERROR)
	E_CANCELLED               = scardError(C.SCARD_E_CANCELLED)
	E_INVALID_HANDLE          = scardError(C.SCARD_E_INVALID_HANDLE)
	E_INVALID_PARAMETER       = scardError(C.SCARD_E_INVALID_PARAMETER)
	E_INVALID_TARGET          = scardError(C.SCARD_E_INVALID_TARGET)
	E_NO_MEMORY               = scardError(C.SCARD_E_NO_MEMORY)
	F_WAITED_TOO_LONG         = scardError(C.SCARD_F_WAITED_TOO_LONG)
	E_INSUFFICIENT_BUFFER     = scardError(C.SCARD_E_INSUFFICIENT_BUFFER)
	E_UNKNOWN_READER          = scardError(C.SCARD_E_UNKNOWN_READER)
	E_TIMEOUT                 = scardError(C.SCARD_E_TIMEOUT)
	E_SHARING_VIOLATION       = scardError(C.SCARD_E_SHARING_VIOLATION)
	E_NO_SMARTCARD            = scardError(C.SCARD_E_NO_SMARTCARD)
	E_UNKNOWN_CARD            = scardError(C.SCARD_E_UNKNOWN_CARD)
	E_CANT_DISPOSE            = scardError(C.SCARD_E_CANT_DISPOSE)
	E_PROTO_MISMATCH          = scardError(C.SCARD_E_PROTO_MISMATCH)
	E_NOT_READY               = scardError(C.SCARD_E_NOT_READY)
	E_INVALID_VALUE           = scardError(C.SCARD_E_INVALID_VALUE)
	E_SYSTEM_CANCELLED        = scardError(C.SCARD_E_SYSTEM_CANCELLED)
	F_COMM_ERROR              = scardError(C.SCARD_F_COMM_ERROR)
	F_UNKNOWN_ERROR           = scardError(C.SCARD_F_UNKNOWN_ERROR)
	E_INVALID_ATR             = scardError(C.SCARD_E_INVALID_ATR)
	E_NOT_TRANSACTED          = scardError(C.SCARD_E_NOT_TRANSACTED)
	E_READER_UNAVAILABLE      = scardError(C.SCARD_E_READER_UNAVAILABLE)
	P_SHUTDOWN                = scardError(C.SCARD_P_SHUTDOWN)
	E_PCI_TOO_SMALL           = scardError(C.SCARD_E_PCI_TOO_SMALL)
	E_READER_UNSUPPORTED      = scardError(C.SCARD_E_READER_UNSUPPORTED)
	E_DUPLICATE_READER        = scardError(C.SCARD_E_DUPLICATE_READER)
	E_CARD_UNSUPPORTED        = scardError(C.SCARD_E_CARD_UNSUPPORTED)
	E_NO_SERVICE              = scardError(C.SCARD_E_NO_SERVICE)
	E_SERVICE_STOPPED         = scardError(C.SCARD_E_SERVICE_STOPPED)
	E_UNEXPECTED              = scardError(C.SCARD_E_UNEXPECTED)
	E_UNSUPPORTED_FEATURE     = scardError(C.SCARD_E_UNSUPPORTED_FEATURE)
	E_ICC_INSTALLATION        = scardError(C.SCARD_E_ICC_INSTALLATION)
	E_ICC_CREATEORDER         = scardError(C.SCARD_E_ICC_CREATEORDER)
	E_FILE_NOT_FOUND          = scardError(C.SCARD_E_FILE_NOT_FOUND)
	E_NO_DIR                  = scardError(C.SCARD_E_NO_DIR)
	E_NO_FILE                 = scardError(C.SCARD_E_NO_FILE)
	E_NO_ACCESS               = scardError(C.SCARD_E_NO_ACCESS)
	E_WRITE_TOO_MANY          = scardError(C.SCARD_E_WRITE_TOO_MANY)
	E_BAD_SEEK                = scardError(C.SCARD_E_BAD_SEEK)
	E_INVALID_CHV             = scardError(C.SCARD_E_INVALID_CHV)
	E_UNKNOWN_RES_MNG         = scardError(C.SCARD_E_UNKNOWN_RES_MNG)
	E_NO_SUCH_CERTIFICATE     = scardError(C.SCARD_E_NO_SUCH_CERTIFICATE)
	E_CERTIFICATE_UNAVAILABLE = scardError(C.SCARD_E_CERTIFICATE_UNAVAILABLE)
	E_NO_READERS_AVAILABLE    = scardError(C.SCARD_E_NO_READERS_AVAILABLE)
	E_COMM_DATA_LOST          = scardError(C.SCARD_E_COMM_DATA_LOST)
	E_NO_KEY_CONTAINER        = scardError(C.SCARD_E_NO_KEY_CONTAINER)
	E_SERVER_TOO_BUSY         = scardError(C.SCARD_E_SERVER_TOO_BUSY)
	W_UNSUPPORTED_CARD        = scardError(C.SCARD_W_UNSUPPORTED_CARD)
	W_UNRESPONSIVE_CARD       = scardError(C.SCARD_W_UNRESPONSIVE_CARD)
	W_UNPOWERED_CARD          = scardError(C.SCARD_W_UNPOWERED_CARD)
	W_RESET_CARD              = scardError(C.SCARD_W_RESET_CARD)
	W_REMOVED_CARD            = scardError(C.SCARD_W_REMOVED_CARD)
	W_SECURITY_VIOLATION      = scardError(C.SCARD_W_SECURITY_VIOLATION)
	W_WRONG_CHV               = scardError(C.SCARD_W_WRONG_CHV)
	W_CHV_BLOCKED             = scardError(C.SCARD_W_CHV_BLOCKED)
	W_EOF                     = scardError(C.SCARD_W_EOF)
	W_CANCELLED_BY_USER       = scardError(C.SCARD_W_CANCELLED_BY_USER)
	W_CARD_NOT_AUTHENTICATED  = scardError(C.SCARD_W_CARD_NOT_AUTHENTICATED)
)

type Protocol uint32

const (
	PROTOCOL_UNDEFINED Protocol = C.SCARD_PROTOCOL_UNDEFINED
	PROTOCOL_T0        Protocol = C.SCARD_PROTOCOL_T0 
	PROTOCOL_T1        Protocol = C.SCARD_PROTOCOL_T1
	PROTOCOL_ANY       Protocol = PROTOCOL_T0 | PROTOCOL_T1
)

type ShareMode uint32

const (
	SHARE_EXCLUSIVE ShareMode = C.SCARD_SHARE_EXCLUSIVE
	SHARE_SHARED    ShareMode = C.SCARD_SHARE_SHARED
	SHARE_DIRECT    ShareMode = C.SCARD_SHARE_DIRECT
)

type Disposition uint32

const (
	LEAVE_CARD   Disposition = C.SCARD_LEAVE_CARD
	RESET_CARD   Disposition = C.SCARD_RESET_CARD
	UNPOWER_CARD Disposition = C.SCARD_UNPOWER_CARD
	EJECT_CARD   Disposition = C.SCARD_EJECT_CARD
)

type State uint32

const (
	UNKNOWN    State = C.SCARD_UNKNOWN
	ABSENT     State = C.SCARD_ABSENT
	PRESENT    State = C.SCARD_PRESENT
	SWALLOWED  State = C.SCARD_SWALLOWED
	POWERED    State = C.SCARD_POWERED
	NEGOTIABLE State = C.SCARD_NEGOTIABLE
	SPECIFIC   State = C.SCARD_SPECIFIC
)

type StateFlag uint32

const (
	STATE_UNAWARE     StateFlag = C.SCARD_STATE_UNAWARE
	STATE_IGNORE      StateFlag = C.SCARD_STATE_IGNORE
	STATE_CHANGED     StateFlag = C.SCARD_STATE_CHANGED
	STATE_UNKNOWN     StateFlag = C.SCARD_STATE_UNKNOWN
	STATE_UNAVAILABLE StateFlag = C.SCARD_STATE_UNAVAILABLE
	STATE_EMPTY       StateFlag = C.SCARD_STATE_EMPTY
	STATE_PRESENT     StateFlag = C.SCARD_STATE_PRESENT
	STATE_ATRMATCH    StateFlag = C.SCARD_STATE_ATRMATCH
	STATE_EXCLUSIVE   StateFlag = C.SCARD_STATE_EXCLUSIVE
	STATE_INUSE       StateFlag = C.SCARD_STATE_INUSE
	STATE_MUTE        StateFlag = C.SCARD_STATE_MUTE
	STATE_UNPOWERED   StateFlag = C.SCARD_STATE_UNPOWERED
)

type Timeout uint32

const (
	INFINITE Timeout = C.INFINITE
)

const (
	MAX_BUFFER_SIZE          = C.MAX_BUFFER_SIZE
	MAX_BUFFER_SIZE_EXTENDED = C.MAX_BUFFER_SIZE_EXTENDED
	MAX_READERNAME           = C.MAX_READERNAME
	MAX_ATR_SIZE             = C.MAX_ATR_SIZE
)


